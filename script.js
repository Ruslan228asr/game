
let board;//–¥–≤–æ–≤–∏–º—ñ—Ä–Ω–∏–π –º–∞—Å–∏–≤, —â–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ. –í—ñ–Ω —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ —Ç—Ä—å–æ—Ö —Ä—è–¥–∫—ñ–≤ —Ç–∞ —Ç—Ä—å–æ—Ö —Å—Ç–æ–≤–ø—Ü—ñ–≤.

let currentPlayer;//—ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è —É –º–∞—Å–∏–≤—ñ
let players = ['‚ù§Ô∏è', 'üëæ']; //–º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏–≥—Ä–æ–∫–æ–≤. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ 'X' –∏ 'O'.

function setup() {
  createCanvas(400, 400);//—Ä–æ–±—ñ—Ç—å —Ö–æ–ª—Å—Ç 400 –Ω–∞ 400 –ø—ñ–∫—Å–µ–ª—ñ–≤ 
   board = [['', '', ''], ['', '', ''], ['', '', '']];//—Ä–æ–±–∏—Ç—å –∫–ª—ã—Ç–∏–Ω–∫–∏ 
  currentPlayer = int(random(players.length));//–Ω–∞ —Ä–∞–Ω–¥–æ–º –≤–∏–±—ñ—Ä–∞—î –≥—Ä–∞–≤—Ü—è 

}

function draw() {
  background(255);//—Ä–æ–±–µ –±—ñ–ª–∏–π —Ñ–æ–Ω
  drawBoard();//–º–∞–ª—é—î —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ 
  let result = checkWinner();//–¥–∏–≤–∏—Ç—å—Å—è —á–∏ —î –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å
  if (result || isBoardFull()) {
    noLoop();
    textSize(32);
    fill(0);
    textAlign(CENTER, CENTER);
    text(result ? result + 'üéâ ' : ' üòû', width / 2, height / 2);//–Ø–∫—â–æ —î –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å –∞–±–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ, –≥—Ä–∞ –ø—Ä–∏–ø–∏–Ω—è—î—Ç—å—Å—è —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –µ–∫—Ä–∞–Ω.
  }
  
}
function mousePressed() //–û–±—á–∏—Å–ª—é—î –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∫–ª—ñ—Ç–∏–Ω–∏, —è–∫—É –Ω–∞—Ç–∏—Å–Ω—É–ª–∏.
//–Ø–∫—â–æ –∫–ª—ñ—Ç–∏–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è (''), —Å—Ç–∞–≤–∏—Ç—å —Å–∏–º–≤–æ–ª –ø–æ—Ç–æ—á–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è —ñ –ø–µ—Ä–µ–º–∏–∫–∞—î —Ö—ñ–¥ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è.
{ 
  let x = int(mouseX / (width / 3));
  let y = int(mouseY / (height / 3));
  if (board[y][x] === '') {
    board[y][x] = players[currentPlayer];
    currentPlayer = (currentPlayer + 1) % players.length;
  }
}
function drawBoard() {//–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —à–∏—Ä–∏–Ω—É (w) –∏ –≤—ã—Å–æ—Ç—É (h) –∫–∞–∂–¥–æ–π –∫–ª–µ—Ç–∫–∏.–†–∏—Å—É–µ—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –∫–ª–µ—Ç–æ–∫.–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∏–º–≤–æ–ª—ã –∏–≥—Ä–æ–∫–æ–≤ ('X' –∏ 'O') –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–µ—Ç–∫–∞—Ö.
  let w = width / 3;
  let h = height / 3;
  strokeWeight(4);
  for (let i = 1; i < 3; i++) {
    line(w * i, 0, w * i, height);
    line(0, h * i, width, h * i);
  }
  for (let y = 0; y < 3; y++) {
    for (let x = 0; x < 3; x++) {
      let spot = board[y][x];
      textSize(64);
      textAlign(CENTER, CENTER);
      let xr = w * x + w / 2;
      let yr = h * y + h / 2;
      text(spot, xr, yr);
    }
  }
}
function checkWinner() {//–ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –ª—ñ–Ω—ñ—ó –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ñ, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ —Ç–∞ –¥—ñ–∞–≥–æ–Ω–∞–ª—å–Ω—ñ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç—Ä—å–æ—Ö –æ–¥–Ω–∞–∫–æ–≤–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤.–Ø–∫—â–æ —Ç–∞–∫—É –ª—ñ–Ω—ñ—é –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–º–æ–∂—Ü—è. –Ü–Ω–∞–∫—à–µ –ø–æ–≤–µ—Ä—Ç–∞—î null.
  let lines = [
    [board[0][0], board[0][1], board[0][2]],
    [board[1][0], board[1][1], board[1][2]],
    [board[2][0], board[2][1], board[2][2]],
    [board[0][0], board[1][0], board[2][0]],
    [board[0][1], board[1][1], board[2][1]],
    [board[0][2], board[1][2], board[2][2]],
    [board[0][0], board[1][1], board[2][2]],
    [board[2][0], board[1][1], board[0][2]]
  ];
  for (let line of lines) {
    if (line[0] && line.every(cell => cell === line[0])) {
      return line[0];
    }
  }
  return null;
}
function isBoardFull() {//–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ.–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –∏–Ω–∞—á–µ false.
  return board.every(row => row.every(cell => cell));
}
